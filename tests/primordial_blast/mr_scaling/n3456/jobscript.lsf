#!/bin/bash
#
#BSUB -P csc317                  # charge csc317 project
#BSUB -W 8:00                # max wall time (hours)
#BSUB -nnodes 3456              # requested nodes
#BSUB -J pb-mr-n3456_fused                    # job name
#BSUB -o stdout-%J.txt
#BSUB -e stderr-%J.txt
#BSUB -N                         # send email on job completion

# change to run directory
cd ./mr_scaling/n3456_fused

# write timestamp to stdout
echo "  "
date

# ensure that appropriate modules are loaded
module load essl
module load metis
module load hdf5
#module load cuda
module load hpctoolkit
module unload xalt

# write loaded modules (sent to stderr)
module list

# set the 'jsrun' options [default value]:
#    number of resource sets  [all available physical cores]
JSRUN_N=6912
#    number of MPI tasks per resource set  [no default]
JSRUN_A=20
#    number of CPUs per resource set  [1]
JSRUN_C=20
#    number of GPUs per resource set  [0]
JSRUN_G=0
#    binding of tasks within a resource set (none / rs / packed:#)  [packed:1]
JSRUN_B=packed:1
#    number of resource sets per host  [no default]
JSRUN_R=2
#    latency priority (CPU-CPU / GPU-CPU)  [GPU-CPU,CPU-MEM,CPU-CPU]
JSRUN_L=CPU-CPU
#    how tasks are started on resource sets  [packed]
JSRUN_D=packed

# create jsrun command
CMD="jsrun -n $JSRUN_N -a $JSRUN_A -c $JSRUN_C -g $JSRUN_G -b $JSRUN_B -r $JSRUN_R -l $JSRUN_L -d $JSRUN_D ./primordial_blast_mr.exe --infile=input_primordial_blast_mr.txt"

# echo jsrun command to stdout
echo "  "
echo "jsrun command line:"
echo $CMD

# run the job
echo "  "
$CMD

# copy output/error files to project home folder and update premissions
cp stdout*.txt stderr*.txt /ccs/proj/csc317/ManyVector-demo-run-results/
chgrp csc317 /ccs/proj/csc317/ManyVector-demo-run-results/*.txt
chmod g+rw /ccs/proj/csc317/ManyVector-demo-run-results/*.txt
